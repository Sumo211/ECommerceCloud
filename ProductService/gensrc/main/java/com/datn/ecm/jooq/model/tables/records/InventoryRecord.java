/**
 * This class is generated by jOOQ
 */
package com.datn.ecm.jooq.model.tables.records;


import com.datn.ecm.jooq.model.tables.Inventory;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InventoryRecord extends UpdatableRecordImpl<InventoryRecord> implements Record4<Long, Long, Integer, String> {

    private static final long serialVersionUID = 658411543;

    /**
     * Setter for <code>ecm_product.inventory.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>ecm_product.inventory.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>ecm_product.inventory.clothes_id</code>.
     */
    public void setClothesId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>ecm_product.inventory.clothes_id</code>.
     */
    public Long getClothesId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>ecm_product.inventory.quantity</code>.
     */
    public void setQuantity(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>ecm_product.inventory.quantity</code>.
     */
    public Integer getQuantity() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>ecm_product.inventory.status</code>.
     */
    public void setStatus(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>ecm_product.inventory.status</code>.
     */
    public String getStatus() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Long, Integer, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Long, Long, Integer, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return Inventory.INVENTORY.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return Inventory.INVENTORY.CLOTHES_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Inventory.INVENTORY.QUANTITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Inventory.INVENTORY.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getClothesId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getQuantity();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InventoryRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InventoryRecord value2(Long value) {
        setClothesId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InventoryRecord value3(Integer value) {
        setQuantity(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InventoryRecord value4(String value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InventoryRecord values(Long value1, Long value2, Integer value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InventoryRecord
     */
    public InventoryRecord() {
        super(Inventory.INVENTORY);
    }

    /**
     * Create a detached, initialised InventoryRecord
     */
    public InventoryRecord(Long id, Long clothesId, Integer quantity, String status) {
        super(Inventory.INVENTORY);

        set(0, id);
        set(1, clothesId);
        set(2, quantity);
        set(3, status);
    }
}
