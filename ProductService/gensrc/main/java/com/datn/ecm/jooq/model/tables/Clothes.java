/**
 * This class is generated by jOOQ
 */
package com.datn.ecm.jooq.model.tables;


import com.datn.ecm.jooq.model.EcmProduct;
import com.datn.ecm.jooq.model.Keys;
import com.datn.ecm.jooq.model.tables.records.ClothesRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Clothes extends TableImpl<ClothesRecord> {

    private static final long serialVersionUID = 1635525246;

    /**
     * The reference instance of <code>ecm_product.clothes</code>
     */
    public static final Clothes CLOTHES = new Clothes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ClothesRecord> getRecordType() {
        return ClothesRecord.class;
    }

    /**
     * The column <code>ecm_product.clothes.id</code>.
     */
    public final TableField<ClothesRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>ecm_product.clothes.category_id</code>.
     */
    public final TableField<ClothesRecord, Long> CATEGORY_ID = createField("category_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>ecm_product.clothes.color</code>.
     */
    public final TableField<ClothesRecord, String> COLOR = createField("color", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>ecm_product.clothes.created_at</code>.
     */
    public final TableField<ClothesRecord, Long> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>ecm_product.clothes.description</code>.
     */
    public final TableField<ClothesRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>ecm_product.clothes.discount</code>.
     */
    public final TableField<ClothesRecord, Double> DISCOUNT = createField("discount", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>ecm_product.clothes.image</code>.
     */
    public final TableField<ClothesRecord, String> IMAGE = createField("image", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>ecm_product.clothes.last_modified</code>.
     */
    public final TableField<ClothesRecord, Long> LAST_MODIFIED = createField("last_modified", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>ecm_product.clothes.manufacture</code>.
     */
    public final TableField<ClothesRecord, String> MANUFACTURE = createField("manufacture", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>ecm_product.clothes.material</code>.
     */
    public final TableField<ClothesRecord, String> MATERIAL = createField("material", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>ecm_product.clothes.name</code>.
     */
    public final TableField<ClothesRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>ecm_product.clothes.price</code>.
     */
    public final TableField<ClothesRecord, Double> PRICE = createField("price", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * The column <code>ecm_product.clothes.size</code>.
     */
    public final TableField<ClothesRecord, String> SIZE = createField("size", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>ecm_product.clothes.sku</code>.
     */
    public final TableField<ClothesRecord, String> SKU = createField("sku", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>ecm_product.clothes</code> table reference
     */
    public Clothes() {
        this("clothes", null);
    }

    /**
     * Create an aliased <code>ecm_product.clothes</code> table reference
     */
    public Clothes(String alias) {
        this(alias, CLOTHES);
    }

    private Clothes(String alias, Table<ClothesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Clothes(String alias, Table<ClothesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return EcmProduct.ECM_PRODUCT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ClothesRecord, Long> getIdentity() {
        return Keys.IDENTITY_CLOTHES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ClothesRecord> getPrimaryKey() {
        return Keys.KEY_CLOTHES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ClothesRecord>> getKeys() {
        return Arrays.<UniqueKey<ClothesRecord>>asList(Keys.KEY_CLOTHES_PRIMARY, Keys.KEY_CLOTHES_UK_3J4NXNCYQ0OSNIST7NMWXUDBD);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Clothes as(String alias) {
        return new Clothes(alias, this);
    }

    /**
     * Rename this table
     */
    public Clothes rename(String name) {
        return new Clothes(name, null);
    }
}
