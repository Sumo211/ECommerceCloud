/**
 * This class is generated by jOOQ
 */
package com.datn.ecm.jooq.model.tables;


import com.datn.ecm.jooq.model.EcmProduct;
import com.datn.ecm.jooq.model.Keys;
import com.datn.ecm.jooq.model.tables.records.InventoryRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Inventory extends TableImpl<InventoryRecord> {

    private static final long serialVersionUID = -1646818439;

    /**
     * The reference instance of <code>ecm_product.inventory</code>
     */
    public static final Inventory INVENTORY = new Inventory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<InventoryRecord> getRecordType() {
        return InventoryRecord.class;
    }

    /**
     * The column <code>ecm_product.inventory.id</code>.
     */
    public final TableField<InventoryRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>ecm_product.inventory.clothes_id</code>.
     */
    public final TableField<InventoryRecord, Long> CLOTHES_ID = createField("clothes_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>ecm_product.inventory.quantity</code>.
     */
    public final TableField<InventoryRecord, Integer> QUANTITY = createField("quantity", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>ecm_product.inventory.status</code>.
     */
    public final TableField<InventoryRecord, String> STATUS = createField("status", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * Create a <code>ecm_product.inventory</code> table reference
     */
    public Inventory() {
        this("inventory", null);
    }

    /**
     * Create an aliased <code>ecm_product.inventory</code> table reference
     */
    public Inventory(String alias) {
        this(alias, INVENTORY);
    }

    private Inventory(String alias, Table<InventoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private Inventory(String alias, Table<InventoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return EcmProduct.ECM_PRODUCT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<InventoryRecord, Long> getIdentity() {
        return Keys.IDENTITY_INVENTORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<InventoryRecord> getPrimaryKey() {
        return Keys.KEY_INVENTORY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<InventoryRecord>> getKeys() {
        return Arrays.<UniqueKey<InventoryRecord>>asList(Keys.KEY_INVENTORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Inventory as(String alias) {
        return new Inventory(alias, this);
    }

    /**
     * Rename this table
     */
    public Inventory rename(String name) {
        return new Inventory(name, null);
    }
}
